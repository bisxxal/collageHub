# name: collage

# services:
#   nextjs:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: nextjs
#     ports:
#       - "3000:3000"
#     env_file:
#       - .env
#   # db:
#   #   image: postgres:16
#   #   ports:
#   #     - "5432:5432"
#   #   container_name: postgres
#   #   environment:
#   #     POSTGRES_USER: postgres
#   #     POSTGRES_PASSWORD: postgres
#   #     POSTGRES_DB: postgres
#   #   volumes:
#   #     - postgres_data:/var/lib/postgresql/data

# # volumes:
# #   postgres_data:
  
name : collage-hub

version: '3.1'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/cms?schema=public
    container_name: cms-docker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/cms?schema=public
      - NEXT_WEBPACK_USEPOLLING=1
    ports:
      - '3000:3000'
      - '5555:5555'
    volumes:
      # - .:/app
      - /app/.next
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:alpine
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cms
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
    postgres-data: